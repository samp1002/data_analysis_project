/*
===============================================================================
Data Segmentation Analysis
===============================================================================
Purpose:
    - To group data into meaningful categories for targeted insights.
    - For customer segmentation, product categorization, or regional analysis.

SQL Functions Used:
    - CASE: Defines custom segmentation logic.
    - GROUP BY: Groups data into segments.
===============================================================================
*/

/*Segment products into cost ranges and 
count how many products fall into each segment*/

with product_segments as (
select
product_key,
product_no,
product_cost,
case when product_cost < 100 then 'below 100'
	 when product_cost between 100 and 500 then '100-500'
	 when product_cost between 500 and 1000 then '500-1000'
	 else 'above 1000'
end cost_range 
from gold.dim_products
)

select 
cost_range ,
count(product_key) as total_products
from product_segments
group by cost_range
order by total_products desc;

with customer_segment as (
select
c.customer_key,
sum(f.sales_amount) total_spending,
min(f.order_date) first_order,
max(f.order_date) last_order
from gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by c.customer_key
)

/*Group customers into three segments based on their spending behavior:
	- VIP: Customers with at least 12 months of history and spending more than €5,000.
	- Regular: Customers with at least 12 months of history but spending €5,000 or less.
	- New: Customers with a lifespan less than 12 months.
And find the total number of customers by each group
*/
select
customer_type,
count(customer_key) as total_customers
from(
select 
customer_key,
total_spending,
datediff(mm,first_order,last_order) lifespan_months,
case when datediff(mm,first_order,last_order) >= 12 and total_spending > 5000 then 'VIP'
	 when datediff(mm,first_order,last_order) >= 12 and total_spending < 5000 then 'Regular'
	 else 'New'
end customer_type
from customer_segment
)t
group by customer_type 
order by total_customers

